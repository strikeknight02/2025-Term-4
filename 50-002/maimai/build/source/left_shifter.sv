/*
    This file was generated automatically by Alchitry Labs 2.0.30-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module left_shifter (
        input wire [31:0] a,
        input wire [4:0] b,
        output reg [31:0] out
    );
    logic [4:0] M_mux_s0;
    logic [4:0][31:0] M_mux_i0;
    logic [4:0][31:0] M_mux_i1;
    logic [4:0][31:0] M_mux_out;
    
    genvar idx_0_776602863;
    
    generate
        for (idx_0_776602863 = 0; idx_0_776602863 < 5; idx_0_776602863 = idx_0_776602863 + 1) begin: forLoop_idx_0_776602863
            mux_2 mux (
                .s0(M_mux_s0[idx_0_776602863]),
                .i0(M_mux_i0[idx_0_776602863]),
                .i1(M_mux_i1[idx_0_776602863]),
                .out(M_mux_out[idx_0_776602863])
            );
        end
    endgenerate
    
    
    logic [31:0] w;
    logic [31:0] x;
    logic [31:0] y;
    logic [31:0] z;
    always @* begin
        M_mux_i0[1'h0] = a;
        M_mux_i1[1'h0] = {a[4'hf:1'h0], 16'h0};
        M_mux_s0[1'h0] = b[3'h4];
        w = M_mux_out[1'h0];
        M_mux_i0[1'h1] = w;
        M_mux_i1[1'h1] = {w[5'h17:1'h0], 8'h0};
        M_mux_s0[1'h1] = b[2'h3];
        x = M_mux_out[1'h1];
        M_mux_i0[2'h2] = x;
        M_mux_i1[2'h2] = {x[5'h1b:1'h0], 4'h0};
        M_mux_s0[2'h2] = b[2'h2];
        y = M_mux_out[2'h2];
        M_mux_i0[2'h3] = y;
        M_mux_i1[2'h3] = {y[5'h1d:1'h0], 2'h0};
        M_mux_s0[2'h3] = b[1'h1];
        z = M_mux_out[2'h3];
        M_mux_i0[3'h4] = z;
        M_mux_i1[3'h4] = {z[5'h1e:1'h0], 1'h0};
        M_mux_s0[3'h4] = b[1'h0];
        out = M_mux_out[3'h4];
    end
    
    
endmodule
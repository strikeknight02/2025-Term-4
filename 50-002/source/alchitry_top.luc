module alchitry_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    output led[8],          // 8 user controllable LEDs
    input usb_rx,           // USB->Serial input
    output usb_tx,           // USB->Serial output
    output io_led[3][8],     // LEDs on IO Shield
    output io_segment[8],        // 7-segment LEDs on IO Shield
    output io_select[4],        // Digit select on IO Shield
    input io_button[5],      // 5 buttons on IO Shield
    input io_dip[3][8]       // DIP switches on IO Shield
) {
    
    rca adder(#BITS(8))
    compare comparator
    sig rst                 // reset signal
    
    .clk(clk) {
        // The reset conditioner is used to synchronize the reset signal to the FPGA
        // clock. This ensures the entire FPGA comes out of reset at the same time.
        reset_conditioner reset_cond
    }
    
    always {
        reset_cond.in = ~rst_n  // input raw inverted reset signal
        rst = reset_cond.out    // conditioned reset
        usb_tx = usb_rx         // echo the serial data
        
        //setting up rca
        adder.a = io_dip[0]
        adder.b = io_dip[1]
        adder.alufn = io_dip[2][7]
        //led = adder.s
        
        //setting up comparator
        comparator.alufn = io_dip[2][2:0]
        comparator.z = adder.z
        comparator.v = adder.v
        comparator.n = adder.n
        led = comparator.out
        //driver code for other io elements
        io_led = 3x{ {8h00} }
        io_select = 4hF
        io_segment = 8h00
    }
}